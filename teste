class Stack:
    def __init__(self):
        self.items = []

    def push(self, info):
        self.items.append(info)

    def pop(self):
        if not self.vazio():
            return self.items.pop()
        return None
    
    def vazio(self):
        return len(self.items) == 0
    
    def peek(self):
        if not self.vazio():
            return self.items[-1]
        return None
        
def parenteses_balanceado(expression):
        stack = Stack()
        for char in expression:
            if char == '(':
                stack.push(char)
            elif char == ')':
                if stack.vazio() or stack.pop() != '(':
                    return False
        return stack.vazio()
    
print(parenteses_balanceado('(a + b) * (c - d)'))
print(parenteses_balanceado('((a + b))'))
print(parenteses_balanceado(')('))
print(parenteses_balanceado('(a + b ) * (c -d))'))

    



